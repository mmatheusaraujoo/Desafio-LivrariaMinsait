// <auto-generated />
using System;
using LivrariaApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LivrariaApi.Migrations
{
    [DbContext(typeof(LivrariaDataContext))]
    [Migration("20230225205403_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.HasKey("AutorId", "LivroId");

                    b.HasIndex("LivroId");

                    b.ToTable("AutorLivro");
                });

            modelBuilder.Entity("LivrariaApi.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataDeNascimento")
                        .HasColumnType("DATE")
                        .HasColumnName("DataDeNascimento");

                    b.Property<string>("Foto")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Foto");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nacionalidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("ResumoBibliografico")
                        .HasMaxLength(1200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("ResumoBibliografico");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Autor_Nome");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("LivrariaApi.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDePublicacao")
                        .HasColumnType("DATE")
                        .HasColumnName("DataDePublicacao");

                    b.Property<byte?>("Edicao")
                        .HasColumnType("TINYINT")
                        .HasColumnName("Edicao");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Editora");

                    b.Property<string>("ISBN")
                        .HasMaxLength(13)
                        .HasColumnType("VARCHAR");

                    b.Property<short>("QuantidadeDePaginas")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("QuantidadeDePaginas");

                    b.Property<short>("QuantidadeEmEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLINT")
                        .HasDefaultValue((short)0)
                        .HasColumnName("QuantidadeEmEstoque");

                    b.Property<string>("Resumo")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Resumo");

                    b.Property<string>("Subtitulo")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Subtitulo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ISBN" }, "IX_Livro_ISBN");

                    b.HasIndex(new[] { "Titulo" }, "IX_Livro_Titulo");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.HasOne("LivrariaApi.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LivroAutor_AutorId");

                    b.HasOne("LivrariaApi.Models.Autor", null)
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LivroAutor_LivroId");
                });
#pragma warning restore 612, 618
        }
    }
}
